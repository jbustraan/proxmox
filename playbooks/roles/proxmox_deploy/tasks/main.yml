---
# tasks file for proxmox_deploy
    - name: Get next available VMID
      shell: pvesh get /cluster/nextid
      register: VMID

    - name: Register new IP address with phpIPAM
      include_tasks: ipam.yml

    - name: Cloning virtual machine on pve1 from template almalinux8-template-9001 with name "{{ VM_name }}" and "{{ VMID.stdout }}"
      shell: qm clone 9001 "{{ VMID.stdout }}" --name "{{ VM_name }}"
      register: clone_status
      when: PV_node == "pve1"

    - name: Cloning virtual machine on pve2 from template almalinux8-template-9002 with name "{{ VM_name }}" and "{{ VMID.stdout }}"
      shell: qm clone 9002 "{{ VMID.stdout }}" --name "{{ VM_name }}"
      register: clone_status
      when: PV_node == "pve2"
      
      #- name: Cloning virtual machine from "{{ VM_template }}" with name "{{ VM_name }}" and "{{ VMID.stdout }}"
      #shell: qm clone "{{ VM_template_ID }}" "{{ VMID.stdout }}" --name "{{ VM_name }}"
      #register: clone_status
      #when: PV_node == "pve2"
      #  API too slow...
      #      proxmox_kvm:
      #  api_user: root@pam
      #  api_password: "{{ PV_password }}"
      #  api_host: "{{ default_proxmox_node }}"
      #  name: "{{ VM_name }}"
      #  node: "{{ default_proxmox_node }}"
      #  clone: "{{ VM_template }}"
      #  timeout: 300
      tags: provission,test

    - name: Copy cloud-init files to storage on proxmox server pve1 on VMID "{{ VMID.stdout }}" 
      copy: 
        src:  "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: root
        group: root
        mode: 0644
      with_items:
        - src: /home/ansible/playbooks/proxmox/playbooks/roles/proxmox_deploy/tasks/user-data.yml
          dest: /mnt/iso/snippets/user-data.yml
        - src: /home/ansible/playbooks/proxmox/playbooks/roles/proxmox_deploy/tasks/meta-data.yml
          dest: /mnt/iso/snippets/meta-data.yml
        - src: /home/ansible/playbooks/proxmox/playbooks/roles/proxmox_deploy/tasks/network-config.yml
          dest: /mnt/iso/snippets/network-config.yml
        - src: /home/ansible/playbooks/proxmox/playbooks/roles/proxmox_deploy/tasks/vendor-config.yml
          dest: /mnt/iso/snippets/vendor-config.yml
      tags: provission

    - name: Replace VM name in user-data 
      lineinfile:
        dest: /mnt/iso/snippets/user-data.yml
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - regexp: "^fqdn: BLANKVM.bustraan.lab"
          line: "fqdn: {{ VM_name }}.bustraan.lab"
        - regexp: "^hostname: BLANKVM"
          line: "hostname: {{ VM_name }}"

    - name: Replace VM name in meta-data 
      lineinfile:
        dest: /mnt/iso/snippets/meta-data.yml
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - regexp: "^instance-id: id-BLANKVM"
          line: "instance-id: id-{{ VM_name }}"
        - regexp: "^local-hostname: BLANKVM"
          line: "local-hostname: {{ VM_name }}"

    - name: Replace IPADDR in network-config with "{{ _ipam2.json.data }}"
      lineinfile:
        dest: /mnt/iso/snippets/network-config.yml
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - regexp: "^    address: IPADDR"
          line: "    address: {{ _ipam2.json.data }}"

    - name: Set cicustom location for user-data, meta-data and network-config yaml files
      shell: qm set "{{ VMID.stdout }}" --cicustom "user=dir-iso:snippets/user-data.yml,meta=dir-iso:snippets/meta-data.yml,network=dir-iso:snippets/network-config.yml,vendor=dir-iso:snippets/vendor-config.yml"
      tags: provission

    - name: Set onboot to true
      shell: qm set "{{ VMID.stdout }}" --onboot 1
      register: onboot_status
      #      proxmox_kvm:
      #  api_user: root@pam
      #  api_password: "{{ PV_password }}"
      #  api_host: "{{ default_proxmox_node }}"
      #  name: "{{ VM_name }}"
      #  node: "{{ default_proxmox_node }}"
      #  vmid: "{{ VMID.stdout }}"
      #  onboot: yes
      #  timeout: 300
      tags: provission

    - name: Set QEMU guest agent to enabled
      shell: qm set "{{ VMID.stdout }}" --agent 1
      register: agent_status
      tags: provission

    - name: Start VM "{{ VM_name }}" 
      shell: qm start "{{ VMID.stdout }}"
      register: start_status
      #proxmox_kvm:
      #  api_user: root@pam
      #  api_password: "{{ PV_password }}"
      #  api_host: "{{ default_proxmox_node }}"
      #  name: "{{ VM_name }}"
      #  node: "{{ default_proxmox_node }}"
      #  vmid: "{{ VMID.stdout }}"
      #  state: started
      #  timeout: 300
      tags: provission

    - name: Waiting to start virtual server machine completely "{{ VM_name }}" 
      wait_for:
        timeout: 15
      tags: provission

    # end of script hopefully

